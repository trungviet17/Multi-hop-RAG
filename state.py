from enum import Enum
from pydantic import BaseModel, Field
from typing import List


class ProcessingState(str, Enum):
    pass 





class ReactOutput(BaseModel): 

    observation: str = Field(
        default=None, 
        description="The observation made by the agent during the execution of the action."
    )

    action: str = Field(
        default=None, 
        description="The action taken by the agent in response to the observation (continue looping or return answer)."
    )

class RAGOutput(BaseModel): 

    documents: List[str] = Field(
        default=None, 
        description="A list of documents retrieved."
    )

    query: List[str] = Field(
        default=None, 
        description="The query used to retrieve the documents."
    )

    answer: List[str] = Field(
        default=None, 
        description="The answer generated by the RAG agent based on the retrieved documents."
    )




class State(BaseModel): 
    react_output: ReactOutput = Field(
        default=None, 
        description="The output of the REACT agent, including the observation and action taken."
    )

    next_node: str = None 
    message: str = None 
    final_output : str =  None 

    rag_output: RAGOutput = Field(
        default=None, 
        description="The output of the RAG agent, including the retrieved documents, query, and answer."
    )

    

